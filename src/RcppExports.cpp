// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fc_Delta_ijh
double fc_Delta_ijh(int i, int j, int h, arma::vec vec_ascend);
RcppExport SEXP _PanelQGARCH_fc_Delta_ijh(SEXP iSEXP, SEXP jSEXP, SEXP hSEXP, SEXP vec_ascendSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vec_ascend(vec_ascendSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_Delta_ijh(i, j, h, vec_ascend));
    return rcpp_result_gen;
END_RCPP
}
// fc_changepoints
arma::Col<int> fc_changepoints(double delta, int i, int j, arma::vec vec_ascend);
RcppExport SEXP _PanelQGARCH_fc_changepoints(SEXP deltaSEXP, SEXP iSEXP, SEXP jSEXP, SEXP vec_ascendSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vec_ascend(vec_ascendSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_changepoints(delta, i, j, vec_ascend));
    return rcpp_result_gen;
END_RCPP
}
// fc_loss_panelQR
double fc_loss_panelQR(double tau, arma::mat phi_N_3, arma::mat Y_N_T, arma::mat w_N_T);
RcppExport SEXP _PanelQGARCH_fc_loss_panelQR(SEXP tauSEXP, SEXP phi_N_3SEXP, SEXP Y_N_TSEXP, SEXP w_N_TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phi_N_3(phi_N_3SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T(w_N_TSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_loss_panelQR(tau, phi_N_3, Y_N_T, w_N_T));
    return rcpp_result_gen;
END_RCPP
}
// fc_select_delta_tau_BIC
arma::vec fc_select_delta_tau_BIC(double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, arma::mat w_N_T, arma::mat phitilde_N_3);
RcppExport SEXP _PanelQGARCH_fc_select_delta_tau_BIC(SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP w_N_TSEXP, SEXP phitilde_N_3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T(w_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3(phitilde_N_3SEXP);
    rcpp_result_gen = Rcpp::wrap(fc_select_delta_tau_BIC(tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, w_N_T, phitilde_N_3));
    return rcpp_result_gen;
END_RCPP
}
// fc_select_delta_tau_CV
arma::vec fc_select_delta_tau_CV(double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, int testLength, arma::mat w_N_T_train, arma::mat phitilde_N_3_train);
RcppExport SEXP _PanelQGARCH_fc_select_delta_tau_CV(SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP testLengthSEXP, SEXP w_N_T_trainSEXP, SEXP phitilde_N_3_trainSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< int >::type testLength(testLengthSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T_train(w_N_T_trainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3_train(phitilde_N_3_trainSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_select_delta_tau_CV(tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, testLength, w_N_T_train, phitilde_N_3_train));
    return rcpp_result_gen;
END_RCPP
}
// fc1_1_select_delta_tau_BIC
arma::vec fc1_1_select_delta_tau_BIC(double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, arma::mat w_N_T, arma::mat phitilde_N_3);
RcppExport SEXP _PanelQGARCH_fc1_1_select_delta_tau_BIC(SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP w_N_TSEXP, SEXP phitilde_N_3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T(w_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3(phitilde_N_3SEXP);
    rcpp_result_gen = Rcpp::wrap(fc1_1_select_delta_tau_BIC(tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, w_N_T, phitilde_N_3));
    return rcpp_result_gen;
END_RCPP
}
// fc1_2_select_delta_tau_BIC
arma::vec fc1_2_select_delta_tau_BIC(arma::Col<int> if_group_numeric, int if_mean_numeric, double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, arma::mat w_N_T, arma::mat phitilde_N_3);
RcppExport SEXP _PanelQGARCH_fc1_2_select_delta_tau_BIC(SEXP if_group_numericSEXP, SEXP if_mean_numericSEXP, SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP w_N_TSEXP, SEXP phitilde_N_3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Col<int> >::type if_group_numeric(if_group_numericSEXP);
    Rcpp::traits::input_parameter< int >::type if_mean_numeric(if_mean_numericSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T(w_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3(phitilde_N_3SEXP);
    rcpp_result_gen = Rcpp::wrap(fc1_2_select_delta_tau_BIC(if_group_numeric, if_mean_numeric, tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, w_N_T, phitilde_N_3));
    return rcpp_result_gen;
END_RCPP
}
// fc2_1_select_delta_tau_BIC
arma::vec fc2_1_select_delta_tau_BIC(double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, arma::mat w_N_T, arma::mat phitilde_N_3);
RcppExport SEXP _PanelQGARCH_fc2_1_select_delta_tau_BIC(SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP w_N_TSEXP, SEXP phitilde_N_3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T(w_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3(phitilde_N_3SEXP);
    rcpp_result_gen = Rcpp::wrap(fc2_1_select_delta_tau_BIC(tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, w_N_T, phitilde_N_3));
    return rcpp_result_gen;
END_RCPP
}
// fc2_2_select_delta_tau_BIC
arma::vec fc2_2_select_delta_tau_BIC(arma::Col<int> if_group_numeric, int if_mean_numeric, double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, arma::mat w_N_T, arma::mat phitilde_N_3);
RcppExport SEXP _PanelQGARCH_fc2_2_select_delta_tau_BIC(SEXP if_group_numericSEXP, SEXP if_mean_numericSEXP, SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP w_N_TSEXP, SEXP phitilde_N_3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Col<int> >::type if_group_numeric(if_group_numericSEXP);
    Rcpp::traits::input_parameter< int >::type if_mean_numeric(if_mean_numericSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T(w_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3(phitilde_N_3SEXP);
    rcpp_result_gen = Rcpp::wrap(fc2_2_select_delta_tau_BIC(if_group_numeric, if_mean_numeric, tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, w_N_T, phitilde_N_3));
    return rcpp_result_gen;
END_RCPP
}
// fc3_1_select_delta_tau_BIC
arma::vec fc3_1_select_delta_tau_BIC(double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, arma::mat w_N_T, arma::mat phitilde_N_3);
RcppExport SEXP _PanelQGARCH_fc3_1_select_delta_tau_BIC(SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP w_N_TSEXP, SEXP phitilde_N_3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T(w_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3(phitilde_N_3SEXP);
    rcpp_result_gen = Rcpp::wrap(fc3_1_select_delta_tau_BIC(tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, w_N_T, phitilde_N_3));
    return rcpp_result_gen;
END_RCPP
}
// fc3_2_select_delta_tau_BIC
arma::vec fc3_2_select_delta_tau_BIC(arma::Col<int> if_group_numeric, int if_mean_numeric, double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, arma::mat w_N_T, arma::mat phitilde_N_3);
RcppExport SEXP _PanelQGARCH_fc3_2_select_delta_tau_BIC(SEXP if_group_numericSEXP, SEXP if_mean_numericSEXP, SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP w_N_TSEXP, SEXP phitilde_N_3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Col<int> >::type if_group_numeric(if_group_numericSEXP);
    Rcpp::traits::input_parameter< int >::type if_mean_numeric(if_mean_numericSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T(w_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3(phitilde_N_3SEXP);
    rcpp_result_gen = Rcpp::wrap(fc3_2_select_delta_tau_BIC(if_group_numeric, if_mean_numeric, tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, w_N_T, phitilde_N_3));
    return rcpp_result_gen;
END_RCPP
}
// fc_1_select_delta_tau_CV
arma::vec fc_1_select_delta_tau_CV(double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, int testLength, arma::mat w_N_T_train, arma::mat phitilde_N_3_train);
RcppExport SEXP _PanelQGARCH_fc_1_select_delta_tau_CV(SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP testLengthSEXP, SEXP w_N_T_trainSEXP, SEXP phitilde_N_3_trainSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< int >::type testLength(testLengthSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T_train(w_N_T_trainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3_train(phitilde_N_3_trainSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_1_select_delta_tau_CV(tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, testLength, w_N_T_train, phitilde_N_3_train));
    return rcpp_result_gen;
END_RCPP
}
// fc_2_select_delta_tau_CV
arma::vec fc_2_select_delta_tau_CV(arma::Col<int> if_group_numeric, int if_mean_numeric, double tolerance, int num_candid_onesplit, arma::vec delta_123_candid_lower, arma::vec delta_123_candid_upper, double tau, arma::mat Y_N_T, int testLength, arma::mat w_N_T_train, arma::mat phitilde_N_3_train);
RcppExport SEXP _PanelQGARCH_fc_2_select_delta_tau_CV(SEXP if_group_numericSEXP, SEXP if_mean_numericSEXP, SEXP toleranceSEXP, SEXP num_candid_onesplitSEXP, SEXP delta_123_candid_lowerSEXP, SEXP delta_123_candid_upperSEXP, SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP testLengthSEXP, SEXP w_N_T_trainSEXP, SEXP phitilde_N_3_trainSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Col<int> >::type if_group_numeric(if_group_numericSEXP);
    Rcpp::traits::input_parameter< int >::type if_mean_numeric(if_mean_numericSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type num_candid_onesplit(num_candid_onesplitSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_lower(delta_123_candid_lowerSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_123_candid_upper(delta_123_candid_upperSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< int >::type testLength(testLengthSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T_train(w_N_T_trainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phitilde_N_3_train(phitilde_N_3_trainSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_2_select_delta_tau_CV(if_group_numeric, if_mean_numeric, tolerance, num_candid_onesplit, delta_123_candid_lower, delta_123_candid_upper, tau, Y_N_T, testLength, w_N_T_train, phitilde_N_3_train));
    return rcpp_result_gen;
END_RCPP
}
// fc_weighs_NT
arma::mat fc_weighs_NT(arma::mat Y_N_T, arma::vec c_N);
RcppExport SEXP _PanelQGARCH_fc_weighs_NT(SEXP Y_N_TSEXP, SEXP c_NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c_N(c_NSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_weighs_NT(Y_N_T, c_N));
    return rcpp_result_gen;
END_RCPP
}
// fc_phitilde_N_tau
arma::mat fc_phitilde_N_tau(double tau, arma::mat Y_N_T, arma::mat w_N_T);
RcppExport SEXP _PanelQGARCH_fc_phitilde_N_tau(SEXP tauSEXP, SEXP Y_N_TSEXP, SEXP w_N_TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_T(Y_N_TSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type w_N_T(w_N_TSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_phitilde_N_tau(tau, Y_N_T, w_N_T));
    return rcpp_result_gen;
END_RCPP
}
// fc_q_y_t0plus1
arma::vec fc_q_y_t0plus1(arma::mat Y_N_t0, arma::mat phihat_N_3);
RcppExport SEXP _PanelQGARCH_fc_q_y_t0plus1(SEXP Y_N_t0SEXP, SEXP phihat_N_3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y_N_t0(Y_N_t0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type phihat_N_3(phihat_N_3SEXP);
    rcpp_result_gen = Rcpp::wrap(fc_q_y_t0plus1(Y_N_t0, phihat_N_3));
    return rcpp_result_gen;
END_RCPP
}
// fc_ifCovers_vec
arma::vec fc_ifCovers_vec(arma::vec observations_vec, arma::vec q_vec);
RcppExport SEXP _PanelQGARCH_fc_ifCovers_vec(SEXP observations_vecSEXP, SEXP q_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type observations_vec(observations_vecSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type q_vec(q_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(fc_ifCovers_vec(observations_vec, q_vec));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PanelQGARCH_fc_Delta_ijh", (DL_FUNC) &_PanelQGARCH_fc_Delta_ijh, 4},
    {"_PanelQGARCH_fc_changepoints", (DL_FUNC) &_PanelQGARCH_fc_changepoints, 4},
    {"_PanelQGARCH_fc_loss_panelQR", (DL_FUNC) &_PanelQGARCH_fc_loss_panelQR, 4},
    {"_PanelQGARCH_fc_select_delta_tau_BIC", (DL_FUNC) &_PanelQGARCH_fc_select_delta_tau_BIC, 8},
    {"_PanelQGARCH_fc_select_delta_tau_CV", (DL_FUNC) &_PanelQGARCH_fc_select_delta_tau_CV, 9},
    {"_PanelQGARCH_fc1_1_select_delta_tau_BIC", (DL_FUNC) &_PanelQGARCH_fc1_1_select_delta_tau_BIC, 8},
    {"_PanelQGARCH_fc1_2_select_delta_tau_BIC", (DL_FUNC) &_PanelQGARCH_fc1_2_select_delta_tau_BIC, 10},
    {"_PanelQGARCH_fc2_1_select_delta_tau_BIC", (DL_FUNC) &_PanelQGARCH_fc2_1_select_delta_tau_BIC, 8},
    {"_PanelQGARCH_fc2_2_select_delta_tau_BIC", (DL_FUNC) &_PanelQGARCH_fc2_2_select_delta_tau_BIC, 10},
    {"_PanelQGARCH_fc3_1_select_delta_tau_BIC", (DL_FUNC) &_PanelQGARCH_fc3_1_select_delta_tau_BIC, 8},
    {"_PanelQGARCH_fc3_2_select_delta_tau_BIC", (DL_FUNC) &_PanelQGARCH_fc3_2_select_delta_tau_BIC, 10},
    {"_PanelQGARCH_fc_1_select_delta_tau_CV", (DL_FUNC) &_PanelQGARCH_fc_1_select_delta_tau_CV, 9},
    {"_PanelQGARCH_fc_2_select_delta_tau_CV", (DL_FUNC) &_PanelQGARCH_fc_2_select_delta_tau_CV, 11},
    {"_PanelQGARCH_fc_weighs_NT", (DL_FUNC) &_PanelQGARCH_fc_weighs_NT, 2},
    {"_PanelQGARCH_fc_phitilde_N_tau", (DL_FUNC) &_PanelQGARCH_fc_phitilde_N_tau, 3},
    {"_PanelQGARCH_fc_q_y_t0plus1", (DL_FUNC) &_PanelQGARCH_fc_q_y_t0plus1, 2},
    {"_PanelQGARCH_fc_ifCovers_vec", (DL_FUNC) &_PanelQGARCH_fc_ifCovers_vec, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_PanelQGARCH(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
